<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABjHAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABwdSURBVHja7Z0JtBXFtYYvlxlRQQRNiKiIijPigDMxouIIKIoDGocoGqc8Q56K44oD
        ahxAn6IyJMYhqBCfQ0QNzjgRjCNPERUQRRRFEbgiApXanr99Td8+Q5+u6lPd/d+1vqUo95zTdfb+q2rX
        3rvqVF2dIoTkkzoOAiEUAEIIBYAQQgEghFAACCEUAEIIBYAQQgEghFAACCEUAEIIBYAQQgEghFAACCEU
        AEIIBYAQQgEghFAACCEUAEIIBYAQQgEghFAACCEUAEIIBYAQQgEghFAACCEUAJItFmg+1cwLQf77dxwj
        CgDJJtM022g6aDqGsI5miGaC5j7NVxwzCgDJBq9pttTUReAAzUmaKZrlHEMKAEmv82/uOXYlPwEhaK85
        UvOs5geOJwWAuMN3JViOZf+WUZy/hBC0worgaY47BcA13tZM1SxL8TPM0LyK5yiHzOq3Yk+/bRG20/yi
        WucvIQTymg9qPqfdUQBc4GFNJ00LzemaqzQzE3z/VZoV+Pf/01yuuSIi8jubappqmldIfaX7eVM/gdfd
        V/MJ7Y8CUGtOCzF62fOer/nI8HL7vQDvak7V7KbprekeMdBmzVlt/gREYB5tkAJQS85Q4cbZRLOuZnzM
        1cXNmts1v9W00awRIJVObFgE5tIOKQBJI8vu+ZoTVOmlqpxxD8TyvJLXbdC8ojkMZ+OZmbnr7G0Hemqu
        ZCIRBSBJxFFP1LRUlRnp9prpZV7za81gTVuXndul7UVgxXU/7ZICkCSPI/hXqbPsUGS5ugyrieNcmtnL
        OLQEAdtVwNpewDCBz3k7bZICkCTfe04bwUjHhbzOm5peSTh9lbP3Lpq+mv3BPpphmjma2WV4yzsOTOC5
        umju5ekABSBJzoyY4da+yFL1URwnWhGBEKduga3GUM0IzQ1FGBly5r4qwvh8q9k4YWGTwOAXtE0KQOKn
        ABUaaXsk1ARf6x+a9U1uAVR4LEKODJ9CTGKF5fH5RrORSnbb0gJHpLRPCoA7AhBwyLOLON+TmpO92EKl
        YlBk6S6JPc2wTblEczUCjUnm1NdCAJriWWmfFAC3BMBnpOsh/bZYbEGq4AYgQ691hXv1VkgG6oY9+sua
        FzRLajg+tRAAb6XD4iEKgLMCUIf691KvLacDSxHdlozDszT9A0Z+Fj6D/P9R+PtLEljauywAciR4QcRY
        BQWAJC4AnTHTR3k/WcI/ovnflOxzr0PtQJICIHGUD2ibFAAnBSAgAn/L+PgcX4PjzStplxSAxIuBqjTa
        BzI+PieqZPf+O/MEgAKQJDeVSgeuwGgvdWi/nnYB6JVwKTYFgPwYcOseQwA6ZrykNUkB+CvtkQJAAXCL
        kykAFICsVwXGEYB1M5y7LiXQPSgAFIAsI3vODWOeBJyb0bG5N6mqRgoABaBWSGHPWjEF4JAaffaV6Fg0
        Ep2HPEZW0LugEsYnfP5PAaAAJI5k6+2m4hluPwufa7HmY/QfmIttxsUo6z0IHFCsrZhmawjTQfgdEYYF
        ET/DBAoABSAPTEL6abWG2z/m+0vz0bs09wCZeQehGUcHH/WVdOsp8nckm28z1BZU8pmWo9Q4yRyAO2mL
        FIBa8JWXo1+l8W6Aij2Po9E4ZJFmYYBFMPSj8Xd/jYYd1lpzBX5fCo2O1VxfJn/hU4hOUs6/k2YWbZEC
        UCsuNeBcftqgw00YNekGHHg/KTO+rIQIzMMRZ1LFP1fRBikAteQiZcfRnOsEHOg3MLzIeMzGEWcSn+O/
        FC8QpQBkRQDS8ONzvl8WKbs9zaZQqdXzKF6l/VEAas2FtZ6Z65LfBgj7FRGAQxMQAAly/p22RwFwgZHY
        F+fF8aVTkVzI8WyRngV7JzD7/4pdfygALqUE76iy5+h+2qGLkax2pOtusZt4xtia/dXqlX/v0+4oAK6w
        HLXoWXD45jia3ABdi3bXPFRktg9juGUBkNXHDNocBYACEPMkAWyBzj1yLdlRaOO1EPkNwrcRxuFDhfsN
        LM/+K2lzFAAKQHnnljsI1sE/pWjpVs3dyBy8C0lFbxgch38jh8HWc0qcZTTtjQLgogDsaPskoISjS5rv
        PsjdPxD5+0OQJvwx+DSB4qL+lpf/LVTlNy0TCkCi3IjkGNsO3xSzrNwDIPfuXYvA21IHCqN2tyEAvmeX
        q9a/oa1RAFxkujLUAjvE6XdE1eHO2KPPwPu51P56jLLUAhxj0BYVhrQ1CoCTfIkleFyHr8deVwp9/qj5
        E87WVzh87i3Xm/exPPsfwOAfBcB1bojiBAHHl/3ttuikI+mtS1L03K965caWZn/Z7jxN+6IAuM4z2JdH
        Me6uqnBZ6AgH9vHV8i9Z/lsMePZHkxPaGAXAefpGFIBOaC2W5me2KQD9sMWgbVEAUsF+lW4DfEbeQaX7
        PjtbAjAAyUi0KwpAajisijjAGilPb33WkgD0S/G2iAKQU15XEToF+4640ioA7yjD/f99K6M+EVORCQWg
        5sxB5VzUFcDbjj/XMszGHl+hLVgPk8d/avVWX4/RnigAaWN2FQIgDHLknFtyDqYEeAHL8c1QPLQF/r3O
        kvPLbUsXc/lPAUgjs6rYAgh7WhaAHwIsQ3GQtDO7BMiMfgTO9JsGsNafMPB6+6B2gbZEAUgl8zBDRnWA
        Xxp6//exnfB4F44urbN38bEzko9q3nQ04PxzaUMUgLQzugoB2FhFa3A5TRX689/o42okIrXUtPbRzOYM
        brDF1ye0HQpAFviLqs4Jfo8VxGwwB1F2iQ/sjySjvij53TRi4w+XuxKJQI2j3VAAcikAPkdojeYdftZO
        m1NXIXzSRPQ72g0FIO8CUJdVZy/xvM0ReKTdUACyJQAqvU5pVZDU6nUQE3D0SLuhAGSGu9MiACGO3QSJ
        SaVoUc3zBd5HehU+SFuhAGSRbxGoS4vzyzn/ruAczXs4PgxjJgSuQ1QR8PU9kGPIibQTCkCWGeTqKiDg
        +L2RJ9CArkOrKny++72MR1V+tm/u4zzN97QPCkDWOddxAfBu9/08xjOOVyG3AAecfwDyGzwaaBsUgLxk
        BP7c8RWAJB89H/M5f1ckSCi1AsNiCgyhAKSWlZhhE43YV/G7G6rKr/0KQ2ICozSbIAtRbhl6QvMWbYAC
        kHceMXxsFnY990mIN7SKEZUXx33GQBXh1ygy4ndPASCaz1BGW5UABJy9DY7OxOEfwP77C7yPBO7Oj3k0
        NxhBQH5vFABikK8QCCvrnEVm+Z6aQ+Dw80sE0aQvX5cYQtMaS3d+Z9GQm4oeTUPnIgpA7XgpWHpbwSUY
        t2luUdGahf4m5ipAUnKX8Pv6iQaMh9QpTFKF+xZP93GGKrQsl/4Jh+PPp2rGuljbQAGoHXLufY1mmwrO
        zQ+KETkf7pX+VrkKWFfluwW33O70HE5GJqNHw6boUNQhQpq0bNfkOreHfNs0CgD50Rj6YcZoHqAe2YNx
        HHCRplsMAVg/I8d20vFoeQhyMiN3Kl4YwiX4bpogR6K+mlOWkN/pB2GhAJCfREASYqYGeMWA831rQABc
        KcyRz/GG5s2ITIPT7YAuSH56eeOTRNWlWv1mowUUAGKbxTEFYE3Npaq6DsWrqkBhb30tuht5jEA8ojmO
        N6PQ0pXS6pCVwBcUAGKT2UjsiWus22MmldebVYY5yCGQwOW+EZE8hvWiliGnqQNS4DMdFaHWggJAInO2
        waSjtuhGVI52KBFOvbMmIAQidi9SAIgtjrOYdZh7Jza0EhhCASAm8wv+jpTjy5DMwx+3RUBWSzdRAEgw
        eFcOySi8CDPIaaAzZ+JUrgJaowcDBSDHyLGQXLk1Eskmm5WhG5femROBm5Ksv6AAJJeEUiwxZSVKb4ch
        v78J4F47nyLQEX0jKAAZYBbSfftgb/4GkKSfg5GYsrPXJITOTBGgANSesOSUBhTi/CkC1wSW6C0DZPVC
        j6g0qZJM5ASEjB0FwBJyx9yHmo+KIAku/0QiSp8AvVWZ23DzckxWwTNJI5GuaC1WColh/FnzFMY9CvI7
        x2g2qOB9/HQtFiRN+jsq8l7yPNcxBlAcaUE9GqWVY/Hv08v8nbGYvTdHWmupBJY2WXJYZQ9pQnICGpH4
        +S3EdBFq4kuxKKYtLKvgPYJIXcQMnJqcVAGdld1x7Ily7RM1Q1H0tTKvpwALUPgSRI667tQM1PQIGcRt
        kU55BP7ZI+8ZaEUctlNE1kHTErml534f41EWm4dV4wt43vsrYBxObjoWGU8pq5b25xN94/he3ouBnlaF
        m2BuQ776z4rQJsxB8xQVr0LIpNLtMIjim5hd5kVkMWNCkas6S43ncjYEKfA6lj7tedQVyalbYRvTNoTW
        OFmQ7c8oLMXT1jG5AbPuyZobKEDZFACZjbbisVcj55Yg4+7oOFOMhxDIfD8E2dsuTKkhvoPmG5tguexd
        F7alKlw59jzbkmVDAN4u1QIrR7N6C9AKPeOGo9dfA2bCYmTRCJ/EyUGpY8KmKGoaBhtagZZq7FicMgG4
        N8vOH2K83VBH3wNsg+j5NPCayvedeE/6k6AqHNeu6K0n43k8gsR05pQIwHiVbYdvgpld9rDSk/8DBH6W
        +fiBhveT8/8syoRQZIUwMMVbn/yuAFR2nH49JJlchZz+ZxRvug1Lif4QSMLVo/5lv4HvYZBDfQspACWQ
        RpeDvW4xKd7Ly7L+VMz0ryJAtTLjxiIrl/twyjCmQsYiviFn42v5aG1iEgh8J0e40mmXAlCeq1W6HL8t
        EjnORCLHu4Y73coZ/cXoFPuYZqmlcV+I9/q8DPMRcBuAJfZANLBs5VoadOA1B+dAiDMhAJMdb9TosSuS
        aR5GkofpSy7fQsKOHH3V+7rD7IfGmibeQ6oPH0D2mfde61dAfZryMfDZOmFFRud2XADmIWnFCYMKGPja
        mP1kCTvX8jgMVaXF59qI2WMrsHqYjEQryXnvnoe0aN9nPoOOnY5U4C/QAKOWfdn9bKQ5BQk1SZwv34N8
        +3Kf8ffInCwXZHsWJw9dsV3JXcMQPOvZdOz01AJ8Gqybt+zwXlLJXphdrwZXqsJNukk9tzTtbFfqmUNO
        GoaimCTIMKwWkrjNJiyZKSr1lktse+I7/ZYOnp5qwCmYgW21r5bz5u1U4Yab1yE8tXze6aj9NloElMBq
        aUuMY3/stV+LiMQjDk2oxv48Oni6yoGnIBc87sWLO2Ap/N9gKJbHK1QNb2AJ0ODtzR0Nfvo778hJwAU4
        pfgMMYk4yUwnqWSe5yg6ePoagryA+v5NEIkuKgYhhTTdUFacliq4O8TBHHJ6r7vO3pon0HXnKQtZdier
        ZJ7vGDp4OjsCLUZizVQE5YZgVg8z2s6YUS5PYSbYFJv74QocfjMkM/0G+Q0fYeyXWnxmCVbultAK4Gg6
        eHZags3AOfYEH/LnF1M8+F8jwSYpx2+D04HBSGb6dw2e+W8JxSs2QEo2nZxNQZ3mEmV/tu+BZKa/ou3a
        0ho+r7ViMDzrmshYpPNTAFLBhZaO65pgWT/Ghb5zCQqA1Gh8R7uiAORKAAIz/lY47lzu4POOt7z8n0ib
        ogDkRgBC9r1XIdDm6vPeY3HLsw+KmGhXFIDsC4DP8FuhQ84Tjj/rl1ii2xAAyTC8nfZEAcibAPRBPsGy
        FDyrZF92sBTz6JWSMaAAEKMCsAPq911/Tjl5ON103gPGoB5HwrQnCkDuBKANciRcd/5TLDYC2QuVpbQn
        CkDuBEA6Fb3v6LPN1Byp2Vf5bvO1MPuPoR1RANLKBdU6RgoEYGoC5cm9a5zYRAEgsZCS2i4ZFQAp7Gpu
        MemnOY4VaUcUgNSyEkd4kWdIhwVArv1+HJF5m0k/vRTvA6AAZIBrq4mOOyYAUmNwGZpwHKl8DUUt1jnc
        RduhAGSB6UjmSaMASAnxdSqk8ajl6sZTFC8CoQBkhDdjCsAMw1uSleieJLfyXoH04jCuRE+BJB2/Dg1F
        GPijAFAAgDT1iNPqTKrn5MouufvAu4a8N8Sl5q3DA+8lzUvY7JMCQAHwOcWeZQTgBzTiGKUKLdP8yDVf
        Z8DZWyXt3BEcvwcqHJfQXigAFIDVnUS6/PQvwcEqwpVejvX4l16P1zt81EkBIDUXgCzf8rMjS3wpABSA
        nP2o/7+D4B3aBwWAApBPAehL26AA5IG3KQChArA/bYMCkAceQV47fxq3+FpF+6AAZJlnFO4IpACs5vwi
        iCNoHxSArCMtuzel86/m/C2RXszZnwKQeSTldmeVPycvhjQPuYN2QQHIC9K7fyeVD+f200kVrmz3Znzp
        FnwfW3tRAPIoADukOFEniJQBH6QZVAQpFf615l1VuGr8bLT0WkRboADklVuR8po2x2+OGoIDNHdqxqGC
        kPn6FABiux9ADQWgO5J0btDMYVceCgCJxxuqcLNNosv1GK+1h+ZG5ebdg4QCkDo+0HRTdp2+NYKN0kfv
        59WKQOA1z2NjDgoAMcM1BmZm/9XgEoxbU/M7VWg9LnX/36PbjyQf/cKACDTFa/H7owCQmIyrdhsQiMBL
        iy65JPNFzSslkmmOjXvygN8/EB2F+B1SAEgMZHbeO4pTBmZ9Wd5Ln75vIgQe1zQgAF3ZoosCQMzwqGb9
        KgRgV8QRosYdTAiApDEv5ndHASBmuKmSiL3v/+2mCq25o77PTJzhUwAoABwEh5iJeMBfsJffuIQAbI+/
        X837NKhCN2EKAAWAg5AQkvo6SRWuzfKQP79U4ncmhq0E8OeBBgKPFAAKAAchASQ4179IUk5HzVmaP6rG
        t918hlTbsN+TANzUGJ9pNAWAUACS4eOwoFuIU3dHHGBWQAQG+arnPKSoZgEFgFAA3OeWUuf8IUKwNZKD
        /OWxz2mGaS7SDDdQQXe7AQHoxko+CgApjSTj7FPpGX9ACLZThYsx5hr+TPPw2nEFoJkq3G7M75kCQEqw
        v6o+tbce+/3nDJ82rGFAALw8hNn8jikApDh9DRTfbIwMPlMFSLESgeoat/IyWRgkNQufIBYyBE1GDvEh
        f56A+AhTkSkATjMDe3oTjnYFnMPECqBtXAHwfTZZTfzD4Jgt05yiaaeKlzS30bRXhRuDn6adUQBcTezZ
        JW7hjc/RNoqQ718uEWiIQQEwkZcQ5HNNn7CxCxGDdTTHa6axTwEFwKXg3wEmnL9u9W3AN4Y+3zgTn8v3
        2Y6wMIZyUlGyW1KIEMjx6POKbcUpADXmQVW4uttVARidAgGQ/X3PKk5PZHtzGvohSJLVZF8/BNomBcA6
        byHDr86wk3XJmQAoBPuqLZP2tyHfAs1RptM+KQA2+UHzBwvOL5xpcI87xvDq5EhL4znfHwtQ1Y+dh2RU
        XqwKtzJRADgIRlmKWabelPP7jLhDzNz/sCBbb4MCsL/FrEA5EtwvrmAFhECyGIfGqKikAJBGPKYKPfls
        zP7nWPi8Aw2fBNxpeVvV2uCJise6KMR6iwJA4vBpsWMrA4a6nSUDPdywAIy1OL4SEDzPW10ZFgFhcwQN
        52B1RAEgFTMnSr5/ROPsYTFwdbhhsRqbQHzlIlMiUGS8JbloK82fkWlIASAlWYRU2DoLAiDO/7bFz542
        AVAIgp5nWQQ89tLcnOWKRwpAfCQFtqUFQ5TXfMXyZ0+jAHgiYHwlUOR7aIEjxLsRjKQAkJ/4p2YDSzPR
        8Qk020irAHjbgfNNB13LrAr21IzAe1MA6PzVX7NVxuBk6ZlEv/00C4C3ErjQ9LFrme+mCYRnOgUg387f
        2fTM41tyjk7oOdIuAMIK5F5YWwkUWRFIduHDFID88YQN5/cZ2LYquSu3syAA3krgApsxgSJCICJwn1q9
        dRsFIMM0wEFtzPwedyX4PFkRAG8lcGESK4G6xh2bdk9rRiEFIFqXmqvLlafGNKbDkftOAah+JXB+DUTA
        a402iwKQXee/XBWaYNo6e5a03K8Tfq6sCYB3OiBC3ctkbkaE/ogzKQDZY4Rp5w+Z+RfU4LmyKAAeH5tO
        za5QyHev0XdJAbCE5IXvYXnmX1ijZ8uyAAjz4pQSVzkGTTX3UwCywZeaQy06/2F4D0UBsMbcGqwEUnNE
        SAEoPfP3szzzf1XjZ8yDADRaCSQkAlJm/BAFIJ0s9M/8hgt8JK/8KkfOjvMiAF5TkUS2A7736KjMtkun
        ACSY6dfMwswvl2n+y6HnzJMANBKBhFYCxyqHLy+hADTmJc0mFmb+7oZbeuWtIUjqAoN4/WaYUCgAKeBF
        9IozYhyB/nNTHXxekwKwR4rKZeeivLezTRHwff+PUwDcR66j2tFCu6nujjq/EQHwPeegFH7ncl9AlwRE
        4AkKgPvcomLemBtwCLm7Tu7ye8PhZzYpACek9HufbLqsO2R8JlIA3Gakl+OvzDiD3Exzewqe25QASLR7
        Roq//8n+xi4Wsj17uNpWjAJQmPlNOr+81m2GP6Pkl0vH2tNVofW2RJXlDoJVjghApzSXxIIpmnM1zS3k
        fnSpQZ0HBaACblIGes37nF+2EKMsFCKdE1hdSC7BZporNS8jsl3Nax9hSAAk//2bDNjDKhQStTB8CrQh
        BcC9L/p/FJp5qviBvqaYTe+z9HmlPfXB/jJXX3uqJjjWukQzCYJRycrgNVXohZ/pPW4MEWhmYkvAFYCb
        TIwz8/sMYy1VuF7rqQRmQFliP6IKNwT/9LlD2lTtpApXXr2D465ir3ebwZXPxIzZh4jocBP5IPj93ZT9
        Bq8UgApZhDz8ir5YFU49XmOCMndZZ5S9aiPDDFkZtMCxppQyXx+SgXiHodl/a4hNFleJUg/Sv5qVQOD7
        eISnAG4gnXaPq+TLDHH6vkjomIR/1lLRJWFpo7DnUMWRZKQD8RwHwnFNCMDpOSgKGxBFAALjfmINy70p
        AD5kD3ZMOTUPfHm/wvn2aapw95+zWYtVrGJMLf9PzUlx2ABVZiwDbKMKjUoXu/xseREA+RIGV2L4vuw9
        OW6b7/hzFV0J2P7xxRyez4kNSSD23gqRNONU3BtQl5OZ/9gIs77snx9LWf3CJkl1vQmMmRxFNjCXJL1k
        XQAWBWf+EjRDEo8s9Rak7DklMNi1BgKwletLXJJvAfiDz8FbI2FlL7+zgJ7ICHzf5YBNGSapBK7ICqyY
        7qUTUQBcRPbvcknEljDUA/HflvsyAD3Hvz7FTh/sX3iw7a2A7/X3dDAwSigAP3KSrwPPJNW48eZ8NP74
        KINHVocmIADNIKJ0IgqAk4hjr52SDjWmkfjFQTZEwDf7b49iJDoRBcBJvkN6bl6XqA94dQ4WnL89Xp8O
        RAEgjiLXYx1iuKLNq/ufyPGlABD3eQzFSqacvx1qHzi2FACSklOB9Q2l+67HmZ8CQNLFF6hDN9XbnmNK
        ASApY5QBAZCl/5scSwoASR8TYjY8EYZovudYUgBI+oqgelVZwy5Il9yzNEs4lhQAkj6kUei6qnKH9zL8
        BqOGQspZV3EcKQAkndyM6H2j2oCQmX4L1LA/xfJeCgDJBpKq+xwi+Gup8BZh56hC49BFHC8KAMmuEHhd
        g+ROAWmLJu3Lp3FsCAUg+8iSXnoaSqOTl7nEJxQAQggFgBAKAAeBEAoAIYQCQAihABBCKACEEAoAIYQC
        QAihABBCKACEEAoAIYQCQAihABBCKACEEAoAIYQCQAihABBCKACEEAoAIYQCQAihABBCKACEEAoAIYQC
        QAihABBCbPEfwZrVn91HK20AAAAASUVORK5CYII=
</value>
  </data>
</root>